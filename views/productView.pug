extends layout

block content
  h1 Products
  p Sort name and brand alphabetically by pressing on table headers
  p Sort Price and stocks(customer/staff only) by pressing on table headers
  p
    small The first row doesnt work?
  form( action='/api/productorder', method="post") 
    input(type='text', id="name", onkeyup='searchFilter(0)', placeholder='Search for product name..')
    input(type='text', id="brand", onkeyup='searchFilter(4)', placeholder='Search for brand name..')
    table.table.table-striped#myTable
          thead
              tr
                th(onclick='sortTable(0)') Name
                th EAN
                th Description
                th(onclick='sortTableNum(3)') Price
                th(onclick='sortTable(4)') Brand
                //th(onclick='sortTable(5)') Availability  Need to change numbers if keep availability
                th(onclick='sortTableNum(5)') Available Stock
                th(onclick='sortTableNum(6)') Warehouse Stock
                th Number needed
                th View and edit historical price
          tbody
            each product in productList
              tr
                td= product.productName
                td= product.productEAN
                td= product.productDescription
                td= product.productPrice
                td= product.productBrand
                //td= product.productAvailability
                td= product.availableStock
                input(type="hidden", name= product.productEAN, value = product.warehouseStock)
                td= product.warehouseStock
                td
                  input(type="number", name= product.productEAN, min= "0")       
                td       
                  form( action='/api/editProduct/'+product.productEAN, method="post")       
                     input(type="submit", value="Edit Price")
                     input(type="hidden", name= product.productEAN, value = product.productEAN)    
                input(type="hidden", name= product.productEAN, value = product.productName)
                input(type="hidden", name= product.productEAN, value = product.productPrice)
    input(type="submit", value="Submit Order", onclick="javascript:alert('Order completed')")
    script.
      function searchFilter(choice) {
        // Declare variables
        var input, filter, table, tr, td, i;
        switch (choice){
                case 0:
                    input = document.getElementById("name");
                    break;
                case 4:
                    input = document.getElementById("brand");
                    break;};
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
      
        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
          td = tr[i].getElementsByTagName("td")[choice];
          if (td) {
            if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
              tr[i].style.display = "";
            } else {
              tr[i].style.display = "none";
            }
          }
        }
      }
    script.
      function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc"; 
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
          //start by saying: no switching is done:
          switching = false;
          rows = table.getElementsByTagName("TR");
          /*Loop through all table rows (except the
          first, which contains table headers):*/
          for (i = 1; i < (rows.length - 1); i++) {
            //start by saying there should be no switching:
            shouldSwitch = false;
            /*Get the two elements you want to compare,
            one from current row and one from the next:*/
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            /*check if the two rows should switch place,
            based on the direction, asc or desc:*/
            if (dir == "asc") {
              if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                //if so, mark as a switch and break the loop:
                shouldSwitch= true;
                break;
              }
            } else if (dir == "desc") {
              if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                //if so, mark as a switch and break the loop:
                shouldSwitch= true;
                break;
              }
            }
          }
          if (shouldSwitch) {
            /*If a switch has been marked, make the switch
            and mark that a switch has been done:*/
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            //Each time a switch is done, increase this count by 1:
            switchcount ++;      
          } else {
            /*If no switching has been done AND the direction is "asc",
            set the direction to "desc" and run the while loop again.*/
            if (switchcount == 0 && dir == "asc") {
              dir = "desc";
              switching = true;
            }
          }
        }
      }  
      
    script.
      function sortTableNum(n) {
          var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
          table = document.getElementById("myTable");
          switching = true;
          //Set the sorting direction to ascending:
          dir = "asc"; 
          /*Make a loop that will continue until
          no switching has been done:*/
          while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
              //start by saying there should be no switching:
              shouldSwitch = false;
              /*Get the two elements you want to compare,
              one from current row and one from the next:*/
              x = rows[i].getElementsByTagName("TD")[n];
              y = rows[i + 1].getElementsByTagName("TD")[n];
              /*check if the two rows should switch place,
              based on the direction, asc or desc:*/
              
              var value1 = parseInt(x.innerHTML);
              var value2 = parseInt(y.innerHTML);
              
              if (dir == "asc") {
                if (value1 > value2) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch= true;
                  break;
                }
              } else if (dir == "desc") {
                if (value1 < value2) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch= true;
                  break;
                }
              }
            
            }
            if (shouldSwitch) {
              /*If a switch has been marked, make the switch
              and mark that a switch has been done:*/
              rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
              switching = true;
              //Each time a switch is done, increase this count by 1:
              switchcount ++;      
            } else {
              /*If no switching has been done AND the direction is "asc",
              set the direction to "desc" and run the while loop again.*/
              if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
              }
            }
          }
        }    
